name: Dev-to-server
on:
  push:
    branches:
      - dev
  workflow_dispatch: {}

jobs:
  build_and_deploy:
    runs-on: windows-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4
        with:
          ref: dev

      # Setup .NET 8
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0    

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore
        
      # Replace connection string in appsettings.json
      - name: Replace connection string in appsettings.json
        shell: pwsh
        run: |
          $appSettingsPath = "WebAPI/appsettings.json"
          $connectionString = "${{ secrets.SWEET_CRAFT_TS_CONNECTION_STRING }}".Trim()
      
          if (Test-Path $appSettingsPath) {
              $jsonContent = Get-Content $appSettingsPath -Raw | ConvertFrom-Json
      
              # Check Default in ConnectionStrings 
              if ($jsonContent.PSObject.Properties.Name -contains "ConnectionStrings" -and
                  $jsonContent.ConnectionStrings.PSObject.Properties.Name -contains "Default") {
                  
                  # Change Default в ConnectionStrings
                  $jsonContent.ConnectionStrings.Default = $connectionString
      
                  # Renew appsetting.json
                  $jsonContent | ConvertTo-Json -Depth 10 | Set-Content $appSettingsPath -Encoding UTF8
                  
                  Write-Host "✅ Updated ConnectionStrings.Default in appsettings.json"
              } else {
                  Write-Host "⚠️ 'ConnectionStrings.Default' not found in appsettings.json!"
                  exit 1
              }
          } else {
              Write-Host "❌ appsettings.json not found!"
              exit 1
          }



      # Build the project
      - name: Build
        run: dotnet build --configuration Release

      # Publish the project
      - name: Publish
        run: dotnet publish --configuration Release --output ./publish --runtime win-x86 

      # Run unit tests
      - name: Test with .NET
        run: dotnet test

      # Deploy to MonsterASP.NET via WebDeploy
      - name: Deploy to MonsterASP.NET via WebDeploy
        uses: rasmusbuchholdt/simply-web-deploy@2.1.0
        with:
          website-name: ${{ secrets.SWEET_CRAFT_TS_WEBSITE_NAME }}
          server-computer-name: ${{ secrets.SWEET_CRAFT_TS_SERVER_COMPUTER_NAME }}
          server-username: ${{ secrets.SWEET_CRAFT_TS_SERVER_USERNAME }}
          server-password: ${{ secrets.SWEET_CRAFT_TS_SERVER_PASSWORD }}
